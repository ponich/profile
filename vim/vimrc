" core init...
if !$PROFILE_ROOT_PATH
    let $PROFILE_ROOT_PATH = substitute(system('dirname $(dirname $(realpath ~/.vimrc))'), '\n\+$', '', '')
endif

" автоустановка плагинов
if empty(glob('~/.vim/autoload/plug.vim'))
    silent !curl -fLo ~/.vim/autoload/plug.vim --create-dirs
        \ https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim
    autocmd VimEnter * PlugInstall --sync | source $MYVIMRC
endif

if filereadable($PROFILE_ROOT_PATH . '/vim/functions.vim')
    execute 'source ' . $PROFILE_ROOT_PATH . '/vim/functions.vim'
endif
" end core init

call plug#begin('~/.vim/plugged')

" возможность использовать ALT для биндинга
Plug 'vim-utils/vim-alt-mappings', has('nvim') ?  { 'on': [] } : {}

" дерево проекта
Plug 'scrooloose/nerdtree'

" поднастройка для nerdtree
Plug 'jistr/vim-nerdtree-tabs'

if executable('git')
    " подстветка измененных строк git
    Plug 'airblade/vim-gitgutter'

    " работа с git
    Plug 'tpope/vim-fugitive'
endif

" асинхронный движок для автокомплита
Plug 'Shougo/deoplete.nvim'

" нужен для работы  deoplete
Plug 'roxma/nvim-yarp'

" клиент для rpd, нужен для работы deoplete
Plug 'roxma/vim-hug-neovim-rpc'

if executable('composer')
    " автокомплит для php
    Plug 'lvht/phpcd.vim', { 'for': 'php', 'do': 'composer install' }

    " форматирование php кода
    Plug 'stephpy/vim-php-cs-fixer', { 'for': ['php'], 'do': 'composer global require friendsofphp/php-cs-fixer' }
endif

" комментирование php кода
Plug 'sumpygump/php-documentor-vim', { 'for': ['php'] }


" автоматическое закрытия скобок, кавычек
Plug 'jiangmiao/auto-pairs'

" тема оформления
Plug 'morhetz/gruvbox'

" просмотр цвета в css коде
Plug 'ap/vim-css-color', { 'for': ['css', 'sass', 'scss', 'less'] }

" поддержка синтатикса для scss, sass
Plug 'cakebaker/scss-syntax.vim', { 'for': ['css', 'sass', 'scss'] }

" комментирование кода
Plug 'tomtom/tcomment_vim'

" начальная страница vim
Plug 'mhinz/vim-startify'

" выравнивания кода
Plug 'godlygeek/tabular'

" предпросмотр markdown
Plug 'iamcco/markdown-preview.vim'

" нужен для работы markdown-preview
Plug 'iamcco/mathjax-support-for-mkdp'

" автокомплит html5
Plug 'othree/html5.vim'

" поддержка синтатикса для blade шаблонов
Plug 'jwalton512/vim-blade'

" поддержка синтатикса для json
Plug 'elzr/vim-json'

" поддержка синтатикса для vue
Plug 'posva/vim-vue'

" поддержка мультикурсоров
Plug 'terryma/vim-multiple-cursors'

" быстрый поиск файла в проекте
Plug 'kien/ctrlp.vim'

" быстрый поиск символа в текущем окне
Plug 'easymotion/vim-easymotion'

" статус панель
Plug 'itchyny/lightline.vim'

" добавляет наименования текущей ветки git в lightline
Plug 'itchyny/vim-gitbranch'

" движок для валидации кода
Plug 'vim-syntastic/syntastic'

" структура документа, тег бар
Plug 'majutsushi/tagbar'

Plug 'christoomey/vim-tmux-navigator'

call plug#end()

let g:mapleader=','
set showtabline=2
set tabstop=4
set shiftwidth=4
set expandtab
set autoread
set autoindent
set smartindent
set number
set laststatus=2
set noswapfile
set updatetime=500
set nocompatible
set ignorecase
set hidden
set hlsearch
set incsearch
set pumheight=10
set fillchars+=vert:\
set nowritebackup
set nobackup
set cursorline
set textwidth=150
set scrolloff=15
set sidescrolloff=15
set sidescroll=5
set path+=**
set guicursor=a:blinkon500-blinkwait500-blinkoff500
set encoding=utf-8
set termencoding=utf-8
set fileencodings=utf-8,cp1251
set spell spelllang=ru
set langmap=ёйцукенгшщзхъфывапролджэячсмитьбюЁЙЦУКЕНГШЩЗХЪФЫВАПРОЛДЖЭЯЧСМИТЬБЮ;`qwertyuiop[]asdfghjkl\\;'zxcvbnm\\,.~QWERTYUIOP{}ASDFGHJKL:\\"ZXCVBNM<>
syntax enable
filetype plugin indent on

autocmd BufRead,BufNewFile *.md setlocal spell
autocmd BufRead,BufNewFile *.txt setlocal spell
autocmd FileType gitcommit setlocal spell

nmap Ж :
nmap Н Y
nmap з p
nmap ф a
nmap щ o
nmap г u

set term=screen-256color

noremap <leader>1 1gt
noremap <leader>2 2gt
noremap <leader>3 3gt
noremap <leader>4 4gt
noremap <leader>5 5gt
noremap <leader>6 6gt
noremap <leader>7 7gt
noremap <leader>8 8gt
noremap <leader>9 9gt
noremap <leader>0 :tablast<cr>

" загрузка конфигураций для плагинов
call PlugConfigure()